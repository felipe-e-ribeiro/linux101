name: CI/CD Pipeline

on:
  release:
    types:
      - published  # Aciona quando um release é publicado

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Etapa para fazer o checkout do repositório
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Garante que o repositório seja clonado com todas as tags e histórico

      # Usa o nome da release para construir a tag
      - name: Set tag from release name
        run: echo "TAG_NAME=${{ github.event.release.name }}" >> $GITHUB_ENV

      # Mostra o nome da release para verificar
      - name: Show release name
        run: echo "Release name is $TAG_NAME"

      # Logando no Docker Hub (se necessário)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Exemplo de Build do Docker com o nome da release (TAG_NAME)
      - name: Build and Push Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --push -t ${{ secrets.DOCKER_USERNAME }}/linux101-web:$TAG_NAME ./linux101-web
